---
title: "How to Avoid Making a Billion-Dollar Mistake: Type-Safe Data Plane Programming with SafeP4"
authors: Matthias Eicholtz, Eric Campbell, Nate Foster, Guido Salvaneschi, Mira Mezini
venue: ECOOP
month: July 2019 
pdf: "/pdfs/safep4.pdf"
descr: "Develop a Type System for P4 that prohibits references to invalid headers. Surveys open source programs to identify real-world bugs that our type system prevents"
--- 

The P4 programming language offers high-level, declarative
abstractions that bring the flexibility of software to the domain of
networking. Unfortunately, the main abstraction used to represent
packet data in P4—header types—lacks basic safety guarantees. Over the
last few years, expe- rience with an increasing number of P4 programs
has shown the risks of the unsafe approach, which often leads to
subtle software bugs.

This paper proposes SafeP4, a domain-specific language for
programmable data planes in which all packet data is guaranteed to
have a well-defined meaning and satisfy essential safety
guarantees. We equip SafeP4 with a formal semantics and a static type
system that statically guarantees header validity—a major source of
safety bugs according to our analysis of real-world P4
programs. Statically ensuring header validity is challenging because
the set of valid headers can be modified at runtime, making it a
dynamic program property. Our type system achieves static safety by
using a form of path-sensitive reasoning that tracks dynamic
information from conditional statements, routing tables, and the
control plane. Our empirical evaluation shows that SafeP4’s type
system can effectively eliminate common failures in many real-world
programs.
