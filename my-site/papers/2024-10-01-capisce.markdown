---
title: "Computing Precise Control Interface Specifications"
authors: <b>Eric Hayden Campbell</b>, Hossein Hojjat, Nate Foster
month: Oct 2024
venue: OOPSLA
pdf: pdfs/capisce.pdf
code: "https://github.com/cornell-netlab/capisce"
descr: Capisce computes control plane interface specifications from data plane programs
---

Verifying network programs is challenging because of how they divide
labor: the control plane computes high level routes through the
network and compiles them to device configurations, while the data
plane uses these configurations to realize the desired forwarding
behavior. In practice, the correctness of the data plane often assumes
that the configurations generated by the control plane will satisfy
complex specifications. Consequently, validation tools such as program
verifiers, runtime monitors, fuzzers, and test-case generators must be
aware of these \emph{control interface specifications} (\spec{}es) to
avoid raising false alarms.
    
In this paper, we propose the first algorithm for computing
\emph{precise} control interface specs from data plane programs.  Our
specifications are designed to be \emph{efficiently
monitorable}---concretely, checking that a given configuration
satisfies a control interface spec can be done in polynomial time. Our algorithm,
based on modular program instrumentation, quantifier elimination, and
a path-based analysis, is more expressive than prior work, and is
applicable to practical network programs. We describe an implementation
and show that control interface spec computed by our tool are useful for finding
real bugs in real-world data plane programs.